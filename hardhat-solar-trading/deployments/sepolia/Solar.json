{
  "address": "0x664b7a40B42f79F71158B7dD812C98491c7619EC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pricePerUnitInWei",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Solar_AmbiguousState",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "given",
          "type": "uint256"
        }
      ],
      "name": "Solar_InsufficientFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Solar_NoFallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Solar_NoWithdraw",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Solar_NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SolarBalanceSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SolarWithdraw",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_machineId",
          "type": "uint256"
        }
      ],
      "name": "currentUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_machineId",
          "type": "uint256"
        }
      ],
      "name": "getMachineState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "usedbalance",
          "type": "uint256"
        }
      ],
      "name": "setBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_machineId",
          "type": "uint256"
        }
      ],
      "name": "setMachine",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pricePerUnitInWei",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_machineId",
          "type": "uint256"
        }
      ],
      "name": "startMachine",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_machineId",
          "type": "uint256"
        }
      ],
      "name": "stopMachine",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6bf55e17f8c2ca943d70974506814d9489f8f3c54c3b0e7d4f5679d5f5d653b2",
  "receipt": {
    "to": null,
    "from": "0x794210836bE01198690dE7Dcac0f4039F6FC6cEd",
    "contractAddress": "0x664b7a40B42f79F71158B7dD812C98491c7619EC",
    "transactionIndex": 5,
    "gasUsed": "871070",
    "logsBloom": "0x
    "blockHash": "0x473a7c0d03a0c91389318e9a496e7598820d9ce7e048facad14673818e024023",
    "transactionHash": "0x6bf55e17f8c2ca943d70974506814d9489f8f3c54c3b0e7d4f5679d5f5d653b2",
    "logs": [],
    "blockNumber": 3292475,
    "cumulativeGasUsed": "24379672",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "272136077158440"
  ],
  "numDeployments": 7,
  "solcInputHash": "b957edca5430d9d6ce4f6f5f19184238",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pricePerUnitInWei\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Solar_AmbiguousState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"given\",\"type\":\"uint256\"}],\"name\":\"Solar_InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Solar_NoFallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Solar_NoWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Solar_NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SolarBalanceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SolarWithdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_machineId\",\"type\":\"uint256\"}],\"name\":\"currentUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_machineId\",\"type\":\"uint256\"}],\"name\":\"getMachineState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usedbalance\",\"type\":\"uint256\"}],\"name\":\"setBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_machineId\",\"type\":\"uint256\"}],\"name\":\"setMachine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pricePerUnitInWei\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_machineId\",\"type\":\"uint256\"}],\"name\":\"startMachine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_machineId\",\"type\":\"uint256\"}],\"name\":\"stopMachine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Solar.sol\":\"Solar\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Solar.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\n/*\\r\\n    Electricity Cost\\r\\n    Units = (Power in watts/1000) \\r\\n    1 unit = 4.01 rs = \\r\\n    1 unit = 272136077158440 wei 0.0002721 ether\\r\\n*/\\r\\nerror Solar_NoFallback();\\r\\nerror Solar_InsufficientFunds(uint256 given);\\r\\nerror Solar_NotOwner();\\r\\nerror Solar_NoWithdraw();\\r\\nerror Solar_AmbiguousState();\\r\\n\\r\\ncontract Solar {\\r\\n\\r\\n    // enum\\r\\n    enum State { Ambigious, Active, Inactive }\\r\\n\\r\\n    //struct\\r\\n\\r\\n    struct machineInfo {\\r\\n        address currentUser;\\r\\n        State state;\\r\\n    }\\r\\n\\r\\n    /* Solar Variables */\\r\\n    uint256 private pricePerUnitInWei;\\r\\n    // userA => x units\\r\\n    mapping(address => uint256) private _balances;\\r\\n    // machineId => machineInfo\\r\\n    mapping(uint256 => machineInfo) machine; \\r\\n    address private immutable owner;\\r\\n\\r\\n    /*Events*/\\r\\n    event SolarWithdraw(uint256 amount);\\r\\n    event SolarBalanceSet(address indexed buyer, uint256 amount);\\r\\n\\r\\n    constructor(uint256 _pricePerUnitInWei) {\\r\\n        pricePerUnitInWei = _pricePerUnitInWei;\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        revert Solar_NoFallback();\\r\\n    }\\r\\n\\r\\n    \\r\\n\\r\\n    function buy() public payable {\\r\\n        if(msg.value == 0) {\\r\\n            revert Solar_InsufficientFunds(msg.value);\\r\\n        }\\r\\n        uint256 unitsRemaining = _balances[msg.sender];\\r\\n        uint256 unitOrdered = (msg.value * 1e18)  / pricePerUnitInWei;\\r\\n        _balances[msg.sender] = unitsRemaining + unitOrdered;\\r\\n    }\\r\\n\\r\\n    function withdraw() external OnlyOwner{\\r\\n        uint256 balance = address(this).balance;\\r\\n        (bool CallSuccess,) = payable(msg.sender).call{value: balance}(\\\"\\\");\\r\\n        if(!CallSuccess) {\\r\\n            revert Solar_NoWithdraw();\\r\\n        }\\r\\n        emit SolarWithdraw(balance);\\r\\n    }\\r\\n\\r\\n    // getting energy remaining for the user\\r\\n    function getBalance() public view returns(uint256) {\\r\\n        return _balances[msg.sender];\\r\\n    }\\r\\n\\r\\n    // setting energy remaining for the user\\r\\n    function setBalance(uint256 usedbalance) public {\\r\\n        _balances[msg.sender] -= usedbalance;\\r\\n        emit SolarBalanceSet(msg.sender, _balances[msg.sender]);\\r\\n    }\\r\\n\\r\\n    // getting price per unit\\r\\n    function getPrice() public view returns(uint256) {\\r\\n        return pricePerUnitInWei;\\r\\n    }\\r\\n\\r\\n    // setting price per unit\\r\\n    function setPrice(uint256 _pricePerUnitInWei) public OnlyOwner {\\r\\n        pricePerUnitInWei = _pricePerUnitInWei;\\r\\n    }\\r\\n\\r\\n    // setting machine \\r\\n    function setMachine(uint256 _machineId) public OnlyOwner {\\r\\n        machine[_machineId] = machineInfo(address(0), State.Inactive);\\r\\n    }\\r\\n\\r\\n    // getting Machine State\\r\\n    function getMachineState(uint256 _machineId) public view returns(bool) {\\r\\n        State scenerio = machine[_machineId].state;\\r\\n        if(scenerio == State.Active) {\\r\\n            return true;\\r\\n        }\\r\\n        else if(scenerio == State.Inactive) {\\r\\n            return false;\\r\\n        } else {\\r\\n            revert Solar_AmbiguousState();\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n    function startMachine(uint256 _machineId) public {\\r\\n        if(machine[_machineId].state == State.Inactive) {\\r\\n            machine[_machineId].state = State.Active;\\r\\n            machine[_machineId].currentUser = msg.sender;\\r\\n        } else {\\r\\n            revert Solar_AmbiguousState();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function stopMachine(uint256 _machineId) public {\\r\\n        if(machine[_machineId].state == State.Active) {\\r\\n            machine[_machineId].state = State.Inactive;\\r\\n            machine[_machineId].currentUser = address(0);\\r\\n        } else {\\r\\n            revert Solar_AmbiguousState();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function currentUser(uint256 _machineId) public view returns(address) {\\r\\n        return machine[_machineId].currentUser;\\r\\n    }\\r\\n\\r\\n    // modifier\\r\\n    modifier OnlyOwner {\\r\\n        if(msg.sender != owner) {\\r\\n            revert Solar_NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x19c7010ac698558ec991302805bce0d1ea2c68120abb84466249146e671d3a80\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f6f380380610f6f833981810160405281019061003291906100ae565b806000819055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100db565b600080fd5b6000819050919050565b61008b81610078565b811461009657600080fd5b50565b6000815190506100a881610082565b92915050565b6000602082840312156100c4576100c3610073565b5b60006100d284828501610099565b91505092915050565b608051610e6b610104600039600081816104b30152818161085401526108ec0152610e6b6000f3fe6080604052600436106100a05760003560e01c806391b7f5ed1161006457806391b7f5ed146101b257806398d5fdca146101db578063990da6aa14610206578063a6f2ae3a1461022f578063d7b80c2014610239578063fb1669ca14610276576100af565b80630e67723b146100e157806312065fe01461011e5780633ccfd60b14610149578063721b5ea6146101605780637d22902f14610189576100af565b366100af576100ad61029f565b005b6040517f3d6caa7900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3480156100ed57600080fd5b5061010860048036038101906101039190610b9e565b61039f565b6040516101159190610be6565b60405180910390f35b34801561012a57600080fd5b5061013361046a565b6040516101409190610c10565b60405180910390f35b34801561015557600080fd5b5061015e6104b1565b005b34801561016c57600080fd5b5061018760048036038101906101829190610b9e565b610619565b005b34801561019557600080fd5b506101b060048036038101906101ab9190610b9e565b610736565b005b3480156101be57600080fd5b506101d960048036038101906101d49190610b9e565b610852565b005b3480156101e757600080fd5b506101f06108e1565b6040516101fd9190610c10565b60405180910390f35b34801561021257600080fd5b5061022d60048036038101906102289190610b9e565b6108ea565b005b61023761029f565b005b34801561024557600080fd5b50610260600480360381019061025b9190610b9e565b610a3d565b60405161026d9190610c6c565b60405180910390f35b34801561028257600080fd5b5061029d60048036038101906102989190610b9e565b610a7d565b005b600034036102e457346040517fccc1a9880000000000000000000000000000000000000000000000000000000081526004016102db9190610c10565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008054670de0b6b3a7640000346103409190610cb6565b61034a9190610d27565b905080826103589190610d58565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000806002600084815260200190815260200160002060000160149054906101000a900460ff169050600160028111156103dc576103db610d8c565b5b8160028111156103ef576103ee610d8c565b5b036103fe576001915050610465565b60028081111561041157610410610d8c565b5b81600281111561042457610423610d8c565b5b03610433576000915050610465565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610536576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600047905060003373ffffffffffffffffffffffffffffffffffffffff168260405161056190610dec565b60006040518083038185875af1925050503d806000811461059e576040519150601f19603f3d011682016040523d82523d6000602084013e6105a3565b606091505b50509050806105de576040517f5127457800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f31988d65ba269c558c03d84992bf850927f450ba8dedd9c09b0f72fd9557bd8e8260405161060d9190610c10565b60405180910390a15050565b6001600281111561062d5761062c610d8c565b5b6002600083815260200190815260200160002060000160149054906101000a900460ff16600281111561066357610662610d8c565b5b0361070157600280600083815260200190815260200160002060000160146101000a81548160ff021916908360028111156106a1576106a0610d8c565b5b021790555060006002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610733565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60028081111561074957610748610d8c565b5b6002600083815260200190815260200160002060000160149054906101000a900460ff16600281111561077f5761077e610d8c565b5b0361081d5760016002600083815260200190815260200160002060000160146101000a81548160ff021916908360028111156107be576107bd610d8c565b5b0217905550336002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061084f565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108d7576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060008190555050565b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461096f576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016002808111156109aa576109a9610d8c565b5b8152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836002811115610a3257610a31610d8c565b5b021790555090505050565b60006002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610acc9190610e01565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167ff47d97c8adb59776b6d08179e655888363d90eaa2a459b62d75ffa4a37f47a8e600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610b589190610c10565b60405180910390a250565b600080fd5b6000819050919050565b610b7b81610b68565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b600060208284031215610bb457610bb3610b63565b5b6000610bc284828501610b89565b91505092915050565b60008115159050919050565b610be081610bcb565b82525050565b6000602082019050610bfb6000830184610bd7565b92915050565b610c0a81610b68565b82525050565b6000602082019050610c256000830184610c01565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c5682610c2b565b9050919050565b610c6681610c4b565b82525050565b6000602082019050610c816000830184610c5d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc182610b68565b9150610ccc83610b68565b9250828202610cda81610b68565b91508282048414831517610cf157610cf0610c87565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d3282610b68565b9150610d3d83610b68565b925082610d4d57610d4c610cf8565b5b828204905092915050565b6000610d6382610b68565b9150610d6e83610b68565b9250828201905080821115610d8657610d85610c87565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081905092915050565b50565b6000610dd6600083610dbb565b9150610de182610dc6565b600082019050919050565b6000610df782610dc9565b9150819050919050565b6000610e0c82610b68565b9150610e1783610b68565b9250828203905081811115610e2f57610e2e610c87565b5b9291505056fea264697066735822122017e5cc49b59c2bc33f54f66bb4a379a128e05d2a41e868483a393f92aa340d0064736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c806391b7f5ed1161006457806391b7f5ed146101b257806398d5fdca146101db578063990da6aa14610206578063a6f2ae3a1461022f578063d7b80c2014610239578063fb1669ca14610276576100af565b80630e67723b146100e157806312065fe01461011e5780633ccfd60b14610149578063721b5ea6146101605780637d22902f14610189576100af565b366100af576100ad61029f565b005b6040517f3d6caa7900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3480156100ed57600080fd5b5061010860048036038101906101039190610b9e565b61039f565b6040516101159190610be6565b60405180910390f35b34801561012a57600080fd5b5061013361046a565b6040516101409190610c10565b60405180910390f35b34801561015557600080fd5b5061015e6104b1565b005b34801561016c57600080fd5b5061018760048036038101906101829190610b9e565b610619565b005b34801561019557600080fd5b506101b060048036038101906101ab9190610b9e565b610736565b005b3480156101be57600080fd5b506101d960048036038101906101d49190610b9e565b610852565b005b3480156101e757600080fd5b506101f06108e1565b6040516101fd9190610c10565b60405180910390f35b34801561021257600080fd5b5061022d60048036038101906102289190610b9e565b6108ea565b005b61023761029f565b005b34801561024557600080fd5b50610260600480360381019061025b9190610b9e565b610a3d565b60405161026d9190610c6c565b60405180910390f35b34801561028257600080fd5b5061029d60048036038101906102989190610b9e565b610a7d565b005b600034036102e457346040517fccc1a9880000000000000000000000000000000000000000000000000000000081526004016102db9190610c10565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008054670de0b6b3a7640000346103409190610cb6565b61034a9190610d27565b905080826103589190610d58565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000806002600084815260200190815260200160002060000160149054906101000a900460ff169050600160028111156103dc576103db610d8c565b5b8160028111156103ef576103ee610d8c565b5b036103fe576001915050610465565b60028081111561041157610410610d8c565b5b81600281111561042457610423610d8c565b5b03610433576000915050610465565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610536576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600047905060003373ffffffffffffffffffffffffffffffffffffffff168260405161056190610dec565b60006040518083038185875af1925050503d806000811461059e576040519150601f19603f3d011682016040523d82523d6000602084013e6105a3565b606091505b50509050806105de576040517f5127457800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f31988d65ba269c558c03d84992bf850927f450ba8dedd9c09b0f72fd9557bd8e8260405161060d9190610c10565b60405180910390a15050565b6001600281111561062d5761062c610d8c565b5b6002600083815260200190815260200160002060000160149054906101000a900460ff16600281111561066357610662610d8c565b5b0361070157600280600083815260200190815260200160002060000160146101000a81548160ff021916908360028111156106a1576106a0610d8c565b5b021790555060006002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610733565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60028081111561074957610748610d8c565b5b6002600083815260200190815260200160002060000160149054906101000a900460ff16600281111561077f5761077e610d8c565b5b0361081d5760016002600083815260200190815260200160002060000160146101000a81548160ff021916908360028111156107be576107bd610d8c565b5b0217905550336002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061084f565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108d7576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060008190555050565b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461096f576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016002808111156109aa576109a9610d8c565b5b8152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836002811115610a3257610a31610d8c565b5b021790555090505050565b60006002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610acc9190610e01565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167ff47d97c8adb59776b6d08179e655888363d90eaa2a459b62d75ffa4a37f47a8e600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610b589190610c10565b60405180910390a250565b600080fd5b6000819050919050565b610b7b81610b68565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b600060208284031215610bb457610bb3610b63565b5b6000610bc284828501610b89565b91505092915050565b60008115159050919050565b610be081610bcb565b82525050565b6000602082019050610bfb6000830184610bd7565b92915050565b610c0a81610b68565b82525050565b6000602082019050610c256000830184610c01565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c5682610c2b565b9050919050565b610c6681610c4b565b82525050565b6000602082019050610c816000830184610c5d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc182610b68565b9150610ccc83610b68565b9250828202610cda81610b68565b91508282048414831517610cf157610cf0610c87565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d3282610b68565b9150610d3d83610b68565b925082610d4d57610d4c610cf8565b5b828204905092915050565b6000610d6382610b68565b9150610d6e83610b68565b9250828201905080821115610d8657610d85610c87565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081905092915050565b50565b6000610dd6600083610dbb565b9150610de182610dc6565b600082019050919050565b6000610df782610dc9565b9150819050919050565b6000610e0c82610b68565b9150610e1783610b68565b9250828203905081811115610e2f57610e2e610c87565b5b9291505056fea264697066735822122017e5cc49b59c2bc33f54f66bb4a379a128e05d2a41e868483a393f92aa340d0064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 25,
        "contract": "contracts/Solar.sol:Solar",
        "label": "pricePerUnitInWei",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 29,
        "contract": "contracts/Solar.sol:Solar",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 34,
        "contract": "contracts/Solar.sol:Solar",
        "label": "machine",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(machineInfo)23_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(State)17": {
        "encoding": "inplace",
        "label": "enum Solar.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(machineInfo)23_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Solar.machineInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(machineInfo)23_storage"
      },
      "t_struct(machineInfo)23_storage": {
        "encoding": "inplace",
        "label": "struct Solar.machineInfo",
        "members": [
          {
            "astId": 19,
            "contract": "contracts/Solar.sol:Solar",
            "label": "currentUser",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 22,
            "contract": "contracts/Solar.sol:Solar",
            "label": "state",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(State)17"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}