{
  "address": "0x9Bc754296600A51755996af578093e3886b91ffd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pricePerUnitInWei",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Solar_AmbiguousState",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "given",
          "type": "uint256"
        }
      ],
      "name": "Solar_InsufficientFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Solar_NoFallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Solar_NoWithdraw",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Solar_NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "machineId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Solar.State",
          "name": "state",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "currentUser",
          "type": "address"
        }
      ],
      "name": "MachineState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SolarBalanceSet",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_machineId",
          "type": "uint256"
        }
      ],
      "name": "currentUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_machineId",
          "type": "uint256"
        }
      ],
      "name": "getMachineState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "usedbalance",
          "type": "uint256"
        }
      ],
      "name": "setBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_machineId",
          "type": "uint256"
        }
      ],
      "name": "setMachine",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pricePerUnitInWei",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_machineId",
          "type": "uint256"
        }
      ],
      "name": "startMachine",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_machineId",
          "type": "uint256"
        }
      ],
      "name": "stopMachine",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xfe7bbd4d80e013abbcd918bd56224b9d2d2f353d5a3ddffe4c37c93289472c0f",
  "receipt": {
    "to": null,
    "from": "0x794210836bE01198690dE7Dcac0f4039F6FC6cEd",
    "contractAddress": "0x9Bc754296600A51755996af578093e3886b91ffd",
    "transactionIndex": 3,
    "gasUsed": "946931",
    "logsBloom": "0x
    "blockHash": "0x2c596b018dfacafa6fad52f67fbfe2a8dac6bd7b723d61fd9885f18bf182cdcf",
    "transactionHash": "0xfe7bbd4d80e013abbcd918bd56224b9d2d2f353d5a3ddffe4c37c93289472c0f",
    "logs": [],
    "blockNumber": 3292972,
    "cumulativeGasUsed": "1009931",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "272136077158440"
  ],
  "numDeployments": 8,
  "solcInputHash": "5a5e104d34de60c265208da29abdc4cb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pricePerUnitInWei\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Solar_AmbiguousState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"given\",\"type\":\"uint256\"}],\"name\":\"Solar_InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Solar_NoFallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Solar_NoWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Solar_NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"machineId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Solar.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currentUser\",\"type\":\"address\"}],\"name\":\"MachineState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SolarBalanceSet\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_machineId\",\"type\":\"uint256\"}],\"name\":\"currentUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_machineId\",\"type\":\"uint256\"}],\"name\":\"getMachineState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usedbalance\",\"type\":\"uint256\"}],\"name\":\"setBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_machineId\",\"type\":\"uint256\"}],\"name\":\"setMachine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pricePerUnitInWei\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_machineId\",\"type\":\"uint256\"}],\"name\":\"startMachine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_machineId\",\"type\":\"uint256\"}],\"name\":\"stopMachine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Solar.sol\":\"Solar\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Solar.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\n/*\\r\\n    Electricity Cost\\r\\n    Units = (Power in watts/1000) \\r\\n    1 unit = 4.01 rs = \\r\\n    1 unit = 272136077158440 wei 0.0002721 ether\\r\\n*/\\r\\nerror Solar_NoFallback();\\r\\nerror Solar_InsufficientFunds(uint256 given);\\r\\nerror Solar_NotOwner();\\r\\nerror Solar_NoWithdraw();\\r\\nerror Solar_AmbiguousState();\\r\\n\\r\\ncontract Solar {\\r\\n\\r\\n    // enum\\r\\n    enum State { Ambigious, Active, Inactive }\\r\\n\\r\\n    //struct\\r\\n\\r\\n    struct machineInfo {\\r\\n        address currentUser;\\r\\n        State state;\\r\\n    }\\r\\n\\r\\n    /* Solar Variables */\\r\\n    uint256 private pricePerUnitInWei;\\r\\n    // userA => x units\\r\\n    mapping(address => uint256) private _balances;\\r\\n    // machineId => machineInfo\\r\\n    mapping(uint256 => machineInfo) machine; \\r\\n    address private immutable owner;\\r\\n\\r\\n    /*Events*/\\r\\n    event SolarBalanceSet(address indexed user, uint256 amount);\\r\\n    event MachineState(uint256 indexed machineId, State state, address currentUser);\\r\\n\\r\\n    constructor(uint256 _pricePerUnitInWei) {\\r\\n        pricePerUnitInWei = _pricePerUnitInWei;\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        revert Solar_NoFallback();\\r\\n    }\\r\\n\\r\\n    \\r\\n\\r\\n    function buy() public payable {\\r\\n        if(msg.value == 0) {\\r\\n            revert Solar_InsufficientFunds(msg.value);\\r\\n        }\\r\\n        uint256 unitsRemaining = _balances[msg.sender];\\r\\n        uint256 unitOrdered = (msg.value * 1e18)  / pricePerUnitInWei;\\r\\n        _balances[msg.sender] = unitsRemaining + unitOrdered;\\r\\n    }\\r\\n\\r\\n    function withdraw() external OnlyOwner{\\r\\n        uint256 balance = address(this).balance;\\r\\n        (bool CallSuccess,) = payable(msg.sender).call{value: balance}(\\\"\\\");\\r\\n        if(!CallSuccess) {\\r\\n            revert Solar_NoWithdraw();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // getting energy remaining for the user\\r\\n    function getBalance() public view returns(uint256) {\\r\\n        return _balances[msg.sender];\\r\\n    }\\r\\n\\r\\n    // setting energy remaining for the user\\r\\n    function setBalance(uint256 usedbalance) public {\\r\\n        _balances[msg.sender] -= usedbalance;\\r\\n        emit SolarBalanceSet(msg.sender, _balances[msg.sender]);\\r\\n    }\\r\\n\\r\\n    // getting price per unit\\r\\n    function getPrice() public view returns(uint256) {\\r\\n        return pricePerUnitInWei;\\r\\n    }\\r\\n\\r\\n    // setting price per unit\\r\\n    function setPrice(uint256 _pricePerUnitInWei) public OnlyOwner {\\r\\n        pricePerUnitInWei = _pricePerUnitInWei;\\r\\n    }\\r\\n\\r\\n    // setting machine \\r\\n    function setMachine(uint256 _machineId) public OnlyOwner {\\r\\n        machine[_machineId] = machineInfo(address(0), State.Inactive);\\r\\n    }\\r\\n\\r\\n    // getting Machine State\\r\\n    function getMachineState(uint256 _machineId) public view returns(bool) {\\r\\n        State scenerio = machine[_machineId].state;\\r\\n        if(scenerio == State.Active) {\\r\\n            return true;\\r\\n        }\\r\\n        else if(scenerio == State.Inactive) {\\r\\n            return false;\\r\\n        } else {\\r\\n            revert Solar_AmbiguousState();\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n    function startMachine(uint256 _machineId) public {\\r\\n        if(machine[_machineId].state == State.Inactive) {\\r\\n            machine[_machineId].state = State.Active;\\r\\n            machine[_machineId].currentUser = msg.sender;\\r\\n            emit MachineState(_machineId, machine[_machineId].state, machine[_machineId].currentUser);\\r\\n        } else {\\r\\n            revert Solar_AmbiguousState();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function stopMachine(uint256 _machineId) public {\\r\\n        if(machine[_machineId].state == State.Active) {\\r\\n            machine[_machineId].state = State.Inactive;\\r\\n            machine[_machineId].currentUser = address(0);\\r\\n            emit MachineState(_machineId, machine[_machineId].state, machine[_machineId].currentUser);\\r\\n        } else {\\r\\n            revert Solar_AmbiguousState();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function currentUser(uint256 _machineId) public view returns(address) {\\r\\n        return machine[_machineId].currentUser;\\r\\n    }\\r\\n\\r\\n    // modifier\\r\\n    modifier OnlyOwner {\\r\\n        if(msg.sender != owner) {\\r\\n            revert Solar_NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa4733dc5dbb789999b1d8ded2be09177a24ea1dd05fbc16dfaa68844aaabd1c1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516110cf3803806110cf833981810160405281019061003291906100ae565b806000819055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100db565b600080fd5b6000819050919050565b61008b81610078565b811461009657600080fd5b50565b6000815190506100a881610082565b92915050565b6000602082840312156100c4576100c3610073565b5b60006100d284828501610099565b91505092915050565b608051610fcb610104600039600081816104b30152818161094301526109db0152610fcb6000f3fe6080604052600436106100a05760003560e01c806391b7f5ed1161006457806391b7f5ed146101b257806398d5fdca146101db578063990da6aa14610206578063a6f2ae3a1461022f578063d7b80c2014610239578063fb1669ca14610276576100af565b80630e67723b146100e157806312065fe01461011e5780633ccfd60b14610149578063721b5ea6146101605780637d22902f14610189576100af565b366100af576100ad61029f565b005b6040517f3d6caa7900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3480156100ed57600080fd5b5061010860048036038101906101039190610c8d565b61039f565b6040516101159190610cd5565b60405180910390f35b34801561012a57600080fd5b5061013361046a565b6040516101409190610cff565b60405180910390f35b34801561015557600080fd5b5061015e6104b1565b005b34801561016c57600080fd5b5061018760048036038101906101829190610c8d565b6105e2565b005b34801561019557600080fd5b506101b060048036038101906101ab9190610c8d565b610792565b005b3480156101be57600080fd5b506101d960048036038101906101d49190610c8d565b610941565b005b3480156101e757600080fd5b506101f06109d0565b6040516101fd9190610cff565b60405180910390f35b34801561021257600080fd5b5061022d60048036038101906102289190610c8d565b6109d9565b005b61023761029f565b005b34801561024557600080fd5b50610260600480360381019061025b9190610c8d565b610b2c565b60405161026d9190610d5b565b60405180910390f35b34801561028257600080fd5b5061029d60048036038101906102989190610c8d565b610b6c565b005b600034036102e457346040517fccc1a9880000000000000000000000000000000000000000000000000000000081526004016102db9190610cff565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008054670de0b6b3a7640000346103409190610da5565b61034a9190610e16565b905080826103589190610e47565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000806002600084815260200190815260200160002060000160149054906101000a900460ff169050600160028111156103dc576103db610e7b565b5b8160028111156103ef576103ee610e7b565b5b036103fe576001915050610465565b60028081111561041157610410610e7b565b5b81600281111561042457610423610e7b565b5b03610433576000915050610465565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610536576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600047905060003373ffffffffffffffffffffffffffffffffffffffff168260405161056190610edb565b60006040518083038185875af1925050503d806000811461059e576040519150601f19603f3d011682016040523d82523d6000602084013e6105a3565b606091505b50509050806105de576040517f5127457800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600160028111156105f6576105f5610e7b565b5b6002600083815260200190815260200160002060000160149054906101000a900460ff16600281111561062c5761062b610e7b565b5b0361075d57600280600083815260200190815260200160002060000160146101000a81548160ff0219169083600281111561066a57610669610e7b565b5b021790555060006002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807f1f0eed26f6b1538f98f0227b782bbe55acfc52da545ebda9d6313873562d7ec76002600084815260200190815260200160002060000160149054906101000a900460ff166002600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610750929190610f38565b60405180910390a261078f565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6002808111156107a5576107a4610e7b565b5b6002600083815260200190815260200160002060000160149054906101000a900460ff1660028111156107db576107da610e7b565b5b0361090c5760016002600083815260200190815260200160002060000160146101000a81548160ff0219169083600281111561081a57610819610e7b565b5b0217905550336002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807f1f0eed26f6b1538f98f0227b782bbe55acfc52da545ebda9d6313873562d7ec76002600084815260200190815260200160002060000160149054906101000a900460ff166002600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516108ff929190610f38565b60405180910390a261093e565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109c6576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060008190555050565b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a5e576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600280811115610a9957610a98610e7b565b5b8152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836002811115610b2157610b20610e7b565b5b021790555090505050565b60006002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bbb9190610f61565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167ff47d97c8adb59776b6d08179e655888363d90eaa2a459b62d75ffa4a37f47a8e600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610c479190610cff565b60405180910390a250565b600080fd5b6000819050919050565b610c6a81610c57565b8114610c7557600080fd5b50565b600081359050610c8781610c61565b92915050565b600060208284031215610ca357610ca2610c52565b5b6000610cb184828501610c78565b91505092915050565b60008115159050919050565b610ccf81610cba565b82525050565b6000602082019050610cea6000830184610cc6565b92915050565b610cf981610c57565b82525050565b6000602082019050610d146000830184610cf0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4582610d1a565b9050919050565b610d5581610d3a565b82525050565b6000602082019050610d706000830184610d4c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db082610c57565b9150610dbb83610c57565b9250828202610dc981610c57565b91508282048414831517610de057610ddf610d76565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e2182610c57565b9150610e2c83610c57565b925082610e3c57610e3b610de7565b5b828204905092915050565b6000610e5282610c57565b9150610e5d83610c57565b9250828201905080821115610e7557610e74610d76565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081905092915050565b50565b6000610ec5600083610eaa565b9150610ed082610eb5565b600082019050919050565b6000610ee682610eb8565b9150819050919050565b60038110610f0157610f00610e7b565b5b50565b6000819050610f1282610ef0565b919050565b6000610f2282610f04565b9050919050565b610f3281610f17565b82525050565b6000604082019050610f4d6000830185610f29565b610f5a6020830184610d4c565b9392505050565b6000610f6c82610c57565b9150610f7783610c57565b9250828203905081811115610f8f57610f8e610d76565b5b9291505056fea2646970667358221220b6b2213817f590a40a852d71f2c391735e67a4ecfea8985161f8fb677e55ab5764736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c806391b7f5ed1161006457806391b7f5ed146101b257806398d5fdca146101db578063990da6aa14610206578063a6f2ae3a1461022f578063d7b80c2014610239578063fb1669ca14610276576100af565b80630e67723b146100e157806312065fe01461011e5780633ccfd60b14610149578063721b5ea6146101605780637d22902f14610189576100af565b366100af576100ad61029f565b005b6040517f3d6caa7900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3480156100ed57600080fd5b5061010860048036038101906101039190610c8d565b61039f565b6040516101159190610cd5565b60405180910390f35b34801561012a57600080fd5b5061013361046a565b6040516101409190610cff565b60405180910390f35b34801561015557600080fd5b5061015e6104b1565b005b34801561016c57600080fd5b5061018760048036038101906101829190610c8d565b6105e2565b005b34801561019557600080fd5b506101b060048036038101906101ab9190610c8d565b610792565b005b3480156101be57600080fd5b506101d960048036038101906101d49190610c8d565b610941565b005b3480156101e757600080fd5b506101f06109d0565b6040516101fd9190610cff565b60405180910390f35b34801561021257600080fd5b5061022d60048036038101906102289190610c8d565b6109d9565b005b61023761029f565b005b34801561024557600080fd5b50610260600480360381019061025b9190610c8d565b610b2c565b60405161026d9190610d5b565b60405180910390f35b34801561028257600080fd5b5061029d60048036038101906102989190610c8d565b610b6c565b005b600034036102e457346040517fccc1a9880000000000000000000000000000000000000000000000000000000081526004016102db9190610cff565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008054670de0b6b3a7640000346103409190610da5565b61034a9190610e16565b905080826103589190610e47565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000806002600084815260200190815260200160002060000160149054906101000a900460ff169050600160028111156103dc576103db610e7b565b5b8160028111156103ef576103ee610e7b565b5b036103fe576001915050610465565b60028081111561041157610410610e7b565b5b81600281111561042457610423610e7b565b5b03610433576000915050610465565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610536576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600047905060003373ffffffffffffffffffffffffffffffffffffffff168260405161056190610edb565b60006040518083038185875af1925050503d806000811461059e576040519150601f19603f3d011682016040523d82523d6000602084013e6105a3565b606091505b50509050806105de576040517f5127457800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600160028111156105f6576105f5610e7b565b5b6002600083815260200190815260200160002060000160149054906101000a900460ff16600281111561062c5761062b610e7b565b5b0361075d57600280600083815260200190815260200160002060000160146101000a81548160ff0219169083600281111561066a57610669610e7b565b5b021790555060006002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807f1f0eed26f6b1538f98f0227b782bbe55acfc52da545ebda9d6313873562d7ec76002600084815260200190815260200160002060000160149054906101000a900460ff166002600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610750929190610f38565b60405180910390a261078f565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6002808111156107a5576107a4610e7b565b5b6002600083815260200190815260200160002060000160149054906101000a900460ff1660028111156107db576107da610e7b565b5b0361090c5760016002600083815260200190815260200160002060000160146101000a81548160ff0219169083600281111561081a57610819610e7b565b5b0217905550336002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807f1f0eed26f6b1538f98f0227b782bbe55acfc52da545ebda9d6313873562d7ec76002600084815260200190815260200160002060000160149054906101000a900460ff166002600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516108ff929190610f38565b60405180910390a261093e565b6040517f7c91c93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109c6576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060008190555050565b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a5e576040517f067b2a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600280811115610a9957610a98610e7b565b5b8152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836002811115610b2157610b20610e7b565b5b021790555090505050565b60006002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bbb9190610f61565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167ff47d97c8adb59776b6d08179e655888363d90eaa2a459b62d75ffa4a37f47a8e600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610c479190610cff565b60405180910390a250565b600080fd5b6000819050919050565b610c6a81610c57565b8114610c7557600080fd5b50565b600081359050610c8781610c61565b92915050565b600060208284031215610ca357610ca2610c52565b5b6000610cb184828501610c78565b91505092915050565b60008115159050919050565b610ccf81610cba565b82525050565b6000602082019050610cea6000830184610cc6565b92915050565b610cf981610c57565b82525050565b6000602082019050610d146000830184610cf0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4582610d1a565b9050919050565b610d5581610d3a565b82525050565b6000602082019050610d706000830184610d4c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db082610c57565b9150610dbb83610c57565b9250828202610dc981610c57565b91508282048414831517610de057610ddf610d76565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e2182610c57565b9150610e2c83610c57565b925082610e3c57610e3b610de7565b5b828204905092915050565b6000610e5282610c57565b9150610e5d83610c57565b9250828201905080821115610e7557610e74610d76565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081905092915050565b50565b6000610ec5600083610eaa565b9150610ed082610eb5565b600082019050919050565b6000610ee682610eb8565b9150819050919050565b60038110610f0157610f00610e7b565b5b50565b6000819050610f1282610ef0565b919050565b6000610f2282610f04565b9050919050565b610f3281610f17565b82525050565b6000604082019050610f4d6000830185610f29565b610f5a6020830184610d4c565b9392505050565b6000610f6c82610c57565b9150610f7783610c57565b9250828203905081811115610f8f57610f8e610d76565b5b9291505056fea2646970667358221220b6b2213817f590a40a852d71f2c391735e67a4ecfea8985161f8fb677e55ab5764736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 25,
        "contract": "contracts/Solar.sol:Solar",
        "label": "pricePerUnitInWei",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 29,
        "contract": "contracts/Solar.sol:Solar",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 34,
        "contract": "contracts/Solar.sol:Solar",
        "label": "machine",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(machineInfo)23_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(State)17": {
        "encoding": "inplace",
        "label": "enum Solar.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(machineInfo)23_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Solar.machineInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(machineInfo)23_storage"
      },
      "t_struct(machineInfo)23_storage": {
        "encoding": "inplace",
        "label": "struct Solar.machineInfo",
        "members": [
          {
            "astId": 19,
            "contract": "contracts/Solar.sol:Solar",
            "label": "currentUser",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 22,
            "contract": "contracts/Solar.sol:Solar",
            "label": "state",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(State)17"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}